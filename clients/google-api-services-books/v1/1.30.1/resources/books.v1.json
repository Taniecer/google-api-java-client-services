{
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerDomain": "google.com",
  "version_module": true,
  "resources": {
    "myconfig": {
      "methods": {
        "requestAccess": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "response": {
            "$ref": "RequestAccessData"
          },
          "description": "Request concurrent and download access restrictions.",
          "parameters": {
            "licenseTypes": {
              "type": "string",
              "description": "The type of access license to request. If not specified, the default is\nBOTH.",
              "location": "query",
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ]
            },
            "nonce": {
              "type": "string",
              "location": "query",
              "description": "The client nonce value."
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "locale": {
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query",
              "type": "string"
            },
            "cpksver": {
              "type": "string",
              "description": "The device/version ID from which to request the restrictions.",
              "location": "query"
            },
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "The volume to request concurrent/download restrictions for."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/myconfig/requestAccess",
          "id": "books.myconfig.requestAccess",
          "flatPath": "books/v1/myconfig/requestAccess"
        },
        "releaseDownloadAccess": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "parameters": {
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "locale": {
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string",
              "location": "query"
            },
            "volumeIds": {
              "type": "string",
              "location": "query",
              "description": "The volume(s) to release restrictions for.",
              "repeated": true
            },
            "cpksver": {
              "description": "The device/version ID from which to release the restriction.",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Release downloaded content access restriction.",
          "id": "books.myconfig.releaseDownloadAccess",
          "response": {
            "$ref": "DownloadAccesses"
          },
          "parameterOrder": [],
          "flatPath": "books/v1/myconfig/releaseDownloadAccess"
        },
        "updateUserSettings": {
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "response": {
            "$ref": "Usersettings"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST",
          "path": "books/v1/myconfig/updateUserSettings",
          "description": "Sets the settings for the user. If a sub-object is specified, it will\noverwrite the existing sub-object stored in the server. Unspecified\nsub-objects will retain the existing value.",
          "parameterOrder": [],
          "request": {
            "$ref": "Usersettings"
          },
          "id": "books.myconfig.updateUserSettings"
        },
        "syncVolumeLicenses": {
          "response": {
            "$ref": "Volumes"
          },
          "httpMethod": "POST",
          "parameters": {
            "locale": {
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "type": "string"
            },
            "showPreorders": {
              "location": "query",
              "type": "boolean",
              "description": "Set to true to show pre-ordered books. Defaults to false."
            },
            "features": {
              "type": "string",
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "location": "query",
              "repeated": true,
              "description": "List of features supported by the client, i.e., 'RENTALS'"
            },
            "volumeIds": {
              "location": "query",
              "type": "string",
              "description": "The volume(s) to request download restrictions for.",
              "repeated": true
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "nonce": {
              "location": "query",
              "type": "string",
              "description": "The client nonce value."
            },
            "cpksver": {
              "location": "query",
              "type": "string",
              "description": "The device/version ID from which to release the restriction."
            },
            "includeNonComicsSeries": {
              "location": "query",
              "description": "Set to true to include non-comics series. Defaults to false.",
              "type": "boolean"
            }
          },
          "description": "Request downloaded content access for specified volumes on the My eBooks\nshelf.",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "id": "books.myconfig.syncVolumeLicenses",
          "path": "books/v1/myconfig/syncVolumeLicenses"
        },
        "getUserSettings": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/myconfig/getUserSettings",
          "flatPath": "books/v1/myconfig/getUserSettings",
          "parameters": {
            "country": {
              "description": "Unused. Added only to workaround TEX mandatory request template requirement",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Gets the current settings for the user.",
          "response": {
            "$ref": "Usersettings"
          },
          "parameterOrder": [],
          "id": "books.myconfig.getUserSettings"
        }
      }
    },
    "familysharing": {
      "methods": {
        "getFamilyInfo": {
          "path": "books/v1/familysharing/getFamilyInfo",
          "id": "books.familysharing.getFamilyInfo",
          "description": "Gets information regarding the family that the user is part of.",
          "parameterOrder": [],
          "flatPath": "books/v1/familysharing/getFamilyInfo",
          "httpMethod": "GET",
          "parameters": {
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "FamilyInfo"
          }
        },
        "unshare": {
          "flatPath": "books/v1/familysharing/unshare",
          "httpMethod": "POST",
          "description": "Initiates revoking content that has already been shared with the user's\nfamily. Empty response indicates success.",
          "path": "books/v1/familysharing/unshare",
          "parameters": {
            "docId": {
              "location": "query",
              "type": "string",
              "description": "The docid to unshare."
            },
            "volumeId": {
              "location": "query",
              "type": "string",
              "description": "The volume to unshare."
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "response": {
            "$ref": "Empty"
          },
          "id": "books.familysharing.unshare",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "share": {
          "httpMethod": "POST",
          "parameters": {
            "docId": {
              "description": "The docid to share.",
              "location": "query",
              "type": "string"
            },
            "volumeId": {
              "description": "The volume to share.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.familysharing.share",
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "description": "Initiates sharing of the content with the user's family. Empty response\nindicates success.",
          "flatPath": "books/v1/familysharing/share",
          "path": "books/v1/familysharing/share"
        }
      }
    },
    "bookshelves": {
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "parameters": {
                "showPreorders": {
                  "type": "boolean",
                  "description": "Set to true to show pre-ordered books. Defaults to false.",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "shelf": {
                  "type": "string",
                  "location": "path",
                  "description": "ID of bookshelf to retrieve volumes.",
                  "required": true
                },
                "userId": {
                  "description": "ID of user for whom to retrieve bookshelf volumes.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "startIndex": {
                  "location": "query",
                  "description": "Index of the first element to return (starts at 0)",
                  "type": "integer",
                  "format": "uint32"
                },
                "maxResults": {
                  "type": "integer",
                  "format": "uint32",
                  "location": "query",
                  "description": "Maximum number of results to return"
                }
              },
              "id": "books.bookshelves.volumes.list",
              "response": {
                "$ref": "Volumes"
              },
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        }
      },
      "methods": {
        "list": {
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "parameters": {
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "userId": {
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves.",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "GET",
          "path": "books/v1/users/{userId}/bookshelves",
          "response": {
            "$ref": "Bookshelves"
          },
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "id": "books.bookshelves.list",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "userId"
          ]
        },
        "get": {
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "parameterOrder": [
            "userId",
            "shelf"
          ],
          "id": "books.bookshelves.get",
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "httpMethod": "GET",
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "userId": {
              "location": "path",
              "description": "ID of user for whom to retrieve bookshelves.",
              "required": true,
              "type": "string"
            },
            "shelf": {
              "description": "ID of bookshelf to retrieve.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Bookshelf"
          },
          "description": "Retrieves metadata for a specific bookshelf for the specified user."
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "response": {
            "$ref": "Discoveryclusters"
          },
          "parameterOrder": [],
          "description": "Returns a stream of personalized book clusters",
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
              "type": "string"
            },
            "maxAllowedMaturityRating": {
              "location": "query",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "id": "books.personalizedstream.get",
          "flatPath": "books/v1/personalizedstream/get",
          "path": "books/v1/personalizedstream/get"
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategoryVolumes": {
          "httpMethod": "GET",
          "description": "List available volumes under categories for onboarding experience.",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/onboarding/listCategoryVolumes",
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "response": {
            "$ref": "Volume2"
          },
          "id": "books.onboarding.listCategoryVolumes",
          "parameters": {
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset."
            },
            "categoryId": {
              "location": "query",
              "type": "string",
              "description": "List of category ids requested.",
              "repeated": true
            },
            "pageToken": {
              "type": "string",
              "description": "The value of the nextToken from the previous page.",
              "location": "query"
            },
            "maxAllowedMaturityRating": {
              "description": "The maximum allowed maturity rating of returned volumes. Books with a\nhigher maturity rating are filtered out.",
              "type": "string",
              "location": "query",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ]
            },
            "pageSize": {
              "description": "Number of maximum results per page to be included in the response.",
              "type": "integer",
              "format": "uint32",
              "location": "query"
            }
          }
        },
        "listCategories": {
          "response": {
            "$ref": "Category"
          },
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [],
          "id": "books.onboarding.listCategories",
          "flatPath": "books/v1/onboarding/listCategories",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "List categories for onboarding experience.",
          "path": "books/v1/onboarding/listCategories"
        }
      }
    },
    "layers": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/volumes/{volumeId}/layersummary",
          "httpMethod": "GET",
          "description": "List the layer summaries for a volume.",
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "format": "uint32",
              "description": "Maximum number of results to return",
              "location": "query",
              "type": "integer"
            },
            "volumeId": {
              "location": "path",
              "required": true,
              "description": "The volume to retrieve layers for.",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "description": "The value of the nextToken from the previous page.",
              "location": "query"
            },
            "contentVersion": {
              "type": "string",
              "description": "The content version for the requested volume.",
              "location": "query"
            }
          },
          "id": "books.layers.list",
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "parameterOrder": [
            "volumeId"
          ],
          "response": {
            "$ref": "Layersummaries"
          }
        },
        "get": {
          "parameters": {
            "contentVersion": {
              "description": "The content version for the requested volume.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "summaryId": {
              "required": true,
              "description": "The ID for the layer to get the summary for.",
              "location": "path",
              "type": "string"
            },
            "volumeId": {
              "type": "string",
              "required": true,
              "description": "The volume to retrieve layers for.",
              "location": "path"
            }
          },
          "id": "books.layers.get",
          "response": {
            "$ref": "Layersummary"
          },
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Gets the layer summary for a volume."
        }
      },
      "resources": {
        "volumeAnnotations": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Volumeannotations"
              },
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "parameters": {
                "updatedMax": {
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive).",
                  "location": "query"
                },
                "showDeleted": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the\nrequest to use this. Defaults to false."
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "startOffset": {
                  "description": "The start offset to start retrieving data from.",
                  "type": "string",
                  "location": "query"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "description": "The volume to retrieve annotations for.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "endPosition": {
                  "location": "query",
                  "type": "string",
                  "description": "The end position to end retrieving data from."
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The content version for the requested volume."
                },
                "startPosition": {
                  "location": "query",
                  "description": "The start position to start retrieving data from.",
                  "type": "string"
                },
                "layerId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID for the layer to get the annotations."
                },
                "volumeAnnotationsVersion": {
                  "description": "The version of the volume annotations that you are requesting.",
                  "type": "string",
                  "location": "query"
                },
                "updatedMin": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive)."
                },
                "endOffset": {
                  "type": "string",
                  "description": "The end offset to end retrieving data from.",
                  "location": "query"
                },
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query",
                  "type": "string"
                },
                "maxResults": {
                  "type": "integer",
                  "location": "query",
                  "format": "uint32",
                  "description": "Maximum number of results to return"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "volumeId",
                "layerId"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "id": "books.layers.volumeAnnotations.list",
              "description": "Gets the volume annotations for a volume and layer."
            },
            "get": {
              "id": "books.layers.volumeAnnotations.get",
              "response": {
                "$ref": "Volumeannotation"
              },
              "description": "Gets the volume annotation.",
              "parameters": {
                "annotationId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The ID of the volume annotation to retrieve."
                },
                "locale": {
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "location": "query"
                },
                "layerId": {
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "location": "path"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "volumeId": {
                  "location": "path",
                  "description": "The volume to retrieve annotations for.",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}"
            }
          }
        },
        "annotationData": {
          "methods": {
            "list": {
              "response": {
                "$ref": "Annotationsdata"
              },
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "httpMethod": "GET",
              "id": "books.layers.annotationData.list",
              "parameterOrder": [
                "volumeId",
                "layerId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "parameters": {
                "h": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The requested pixel height for any images. If height is provided width must\nalso be provided.",
                  "location": "query"
                },
                "annotationDataId": {
                  "repeated": true,
                  "type": "string",
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this\nis set.",
                  "location": "query"
                },
                "updatedMin": {
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive).",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "description": "The volume to retrieve annotation data for.",
                  "required": true,
                  "location": "path"
                },
                "maxResults": {
                  "description": "Maximum number of results to return",
                  "type": "integer",
                  "format": "uint32",
                  "location": "query"
                },
                "w": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The requested pixel width for any images. If width is provided height must\nalso be provided.",
                  "location": "query"
                },
                "updatedMax": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive)."
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The content version for the requested volume."
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "layerId": {
                  "description": "The ID for the layer to get the annotation data.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The value of the nextToken from the previous page.",
                  "location": "query"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.",
                  "location": "query",
                  "type": "string"
                },
                "scale": {
                  "format": "int32",
                  "location": "query",
                  "description": "The requested scale for the image.",
                  "type": "integer"
                }
              },
              "description": "Gets the annotation data for a volume and layer."
            },
            "get": {
              "httpMethod": "GET",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "id": "books.layers.annotationData.get",
              "description": "Gets the annotation data.",
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "layerId": {
                  "required": true,
                  "description": "The ID for the layer to get the annotations.",
                  "location": "path",
                  "type": "string"
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The content version for the volume you are trying to retrieve."
                },
                "w": {
                  "format": "int32",
                  "location": "query",
                  "description": "The requested pixel width for any images. If width is provided height must\nalso be provided.",
                  "type": "integer"
                },
                "allowWebDefinitions": {
                  "description": "For the dictionary layer. Whether or not to allow web definitions.",
                  "location": "query",
                  "type": "boolean"
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'."
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "volumeId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The volume to retrieve annotations for."
                },
                "annotationDataId": {
                  "description": "The ID of the annotation data to retrieve.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "scale": {
                  "description": "The requested scale for the image.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "h": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The requested pixel height for any images. If height is provided width must\nalso be provided."
                }
              }
            }
          }
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "parameterOrder": [],
          "id": "books.notification.get",
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "notification_id": {
              "type": "string",
              "location": "query",
              "description": "String to identify the notification."
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating notification title and body.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/notification/get",
          "flatPath": "books/v1/notification/get",
          "description": "Returns notification details for a given notification id.",
          "httpMethod": "GET",
          "response": {
            "$ref": "Notification"
          }
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "parameterOrder": [],
          "id": "books.dictionary.listOfflineMetadata",
          "description": "Returns a list of offline dictionary metadata available",
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "path": "books/v1/dictionary/listOfflineMetadata",
          "httpMethod": "GET",
          "parameters": {
            "cpksver": {
              "location": "query",
              "description": "The device/version ID from which to request the data.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Metadata"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "volumes": {
      "methods": {
        "list": {
          "path": "books/v1/volumes",
          "id": "books.volumes.list",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Volumes"
          },
          "httpMethod": "GET",
          "parameters": {
            "partner": {
              "location": "query",
              "description": "Restrict and brand results for partner ID.",
              "type": "string"
            },
            "maxAllowedMaturityRating": {
              "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
              "type": "string",
              "location": "query",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ]
            },
            "libraryRestrict": {
              "location": "query",
              "description": "Restrict search to this user's library.",
              "type": "string",
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ]
            },
            "startIndex": {
              "description": "Index of the first result to return (starts at 0)",
              "location": "query",
              "type": "integer",
              "format": "uint32"
            },
            "showPreorders": {
              "description": "Set to true to show books available for preorder. Defaults to false.",
              "type": "boolean",
              "location": "query"
            },
            "filter": {
              "description": "Filter search results.",
              "location": "query",
              "type": "string",
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ]
            },
            "projection": {
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string",
              "description": "Restrict information returned to a set of selected fields."
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "location": "query",
              "type": "string"
            },
            "langRestrict": {
              "description": "Restrict results to books with this language code.",
              "location": "query",
              "type": "string"
            },
            "q": {
              "type": "string",
              "location": "query",
              "description": "Full-text search query string."
            },
            "printType": {
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "type": "string",
              "description": "Restrict to books or magazines.",
              "location": "query"
            },
            "orderBy": {
              "type": "string",
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ],
              "location": "query",
              "description": "Sort search results."
            },
            "maxResults": {
              "format": "uint32",
              "description": "Maximum number of results to return.",
              "location": "query",
              "type": "integer"
            },
            "download": {
              "location": "query",
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ],
              "description": "Restrict to volumes by download availability.",
              "type": "string"
            }
          },
          "flatPath": "books/v1/volumes",
          "parameterOrder": [],
          "description": "Performs a book search."
        },
        "get": {
          "path": "books/v1/volumes/{volumeId}",
          "description": "Gets volume information for a single volume.",
          "response": {
            "$ref": "Volume"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "flatPath": "books/v1/volumes/{volumeId}",
          "parameterOrder": [
            "volumeId"
          ],
          "parameters": {
            "source": {
              "type": "string",
              "description": "string  to identify the originator of this request.",
              "location": "query"
            },
            "user_library_consistent_read": {
              "location": "query",
              "type": "boolean"
            },
            "projection": {
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "location": "query",
              "description": "Restrict information returned to a set of selected fields.",
              "type": "string"
            },
            "partner": {
              "type": "string",
              "location": "query",
              "description": "Brand results for partner ID."
            },
            "includeNonComicsSeries": {
              "type": "boolean",
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query"
            },
            "volumeId": {
              "required": true,
              "location": "path",
              "description": "ID of volume to retrieve.",
              "type": "string"
            },
            "country": {
              "location": "query",
              "type": "string",
              "description": "ISO-3166-1 code to override the IP-based location."
            }
          },
          "id": "books.volumes.get"
        }
      },
      "resources": {
        "mybooks": {
          "methods": {
            "list": {
              "path": "books/v1/volumes/mybooks",
              "flatPath": "books/v1/volumes/mybooks",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "id": "books.volumes.mybooks.list",
              "description": "Return a list of books in My Library.",
              "parameterOrder": [],
              "response": {
                "$ref": "Volumes"
              },
              "parameters": {
                "startIndex": {
                  "location": "query",
                  "format": "uint32",
                  "description": "Index of the first result to return (starts at 0)",
                  "type": "integer"
                },
                "country": {
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query"
                },
                "maxResults": {
                  "description": "Maximum number of results to return.",
                  "type": "integer",
                  "format": "uint32",
                  "location": "query"
                },
                "processingState": {
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "repeated": true,
                  "location": "query",
                  "type": "string",
                  "description": "The processing state of the user uploaded volumes to be returned.\nApplicable only if the UPLOADED is specified in the acquireMethod."
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for\ngenerating recommendations.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "acquireMethod": {
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ],
                  "type": "string",
                  "description": "How the book was acquired",
                  "location": "query",
                  "repeated": true
                }
              }
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "maxResults": {
                  "description": "Maximum number of results to return.",
                  "format": "uint32",
                  "location": "query",
                  "type": "integer"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "location": "query",
                  "type": "string"
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "repeated": true,
                  "description": "The ids of the volumes to be returned. If not specified all that match the\nprocessingState are returned."
                },
                "processingState": {
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "location": "query",
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "repeated": true,
                  "type": "string"
                },
                "startIndex": {
                  "location": "query",
                  "type": "integer",
                  "format": "uint32",
                  "description": "Index of the first result to return (starts at 0)"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [],
              "description": "Return a list of books uploaded by the current user.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.volumes.useruploaded.list",
              "path": "books/v1/volumes/useruploaded",
              "flatPath": "books/v1/volumes/useruploaded",
              "response": {
                "$ref": "Volumes"
              }
            }
          }
        },
        "recommended": {
          "methods": {
            "list": {
              "description": "Return a list of recommended books for the current user.",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "locale": {
                  "location": "query",
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations."
                },
                "maxAllowedMaturityRating": {
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [],
              "flatPath": "books/v1/volumes/recommended",
              "httpMethod": "GET",
              "response": {
                "$ref": "Volumes"
              },
              "path": "books/v1/volumes/recommended",
              "id": "books.volumes.recommended.list",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "rate": {
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "id": "books.volumes.recommended.rate",
              "flatPath": "books/v1/volumes/recommended/rate",
              "httpMethod": "POST",
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "description": "ID of the source volume.",
                  "location": "query"
                },
                "rating": {
                  "type": "string",
                  "description": "Rating to be given to the volume.",
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ],
                  "location": "query"
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "type": "string"
                }
              },
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Rate a recommended book for the current user.",
              "path": "books/v1/volumes/recommended/rate"
            }
          }
        },
        "associated": {
          "methods": {
            "list": {
              "path": "books/v1/volumes/{volumeId}/associated",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Return a list of associated books.",
              "id": "books.volumes.associated.list",
              "parameters": {
                "maxAllowedMaturityRating": {
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.",
                  "location": "query",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "association": {
                  "type": "string",
                  "description": "Association type.",
                  "location": "query",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ]
                },
                "locale": {
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.",
                  "type": "string"
                },
                "volumeId": {
                  "description": "ID of the source volume.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Volumes"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "volumeId"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/associated"
            }
          }
        }
      }
    },
    "series": {
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "Seriesmembership"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.series.membership.get",
              "flatPath": "books/v1/series/membership/get",
              "parameterOrder": [],
              "path": "books/v1/series/membership/get",
              "parameters": {
                "page_size": {
                  "type": "integer",
                  "description": "Number of maximum results per page to be included in the response.",
                  "format": "uint32",
                  "location": "query"
                },
                "page_token": {
                  "type": "string",
                  "location": "query",
                  "description": "The value of the nextToken from the previous page."
                },
                "series_id": {
                  "description": "String that identifies the series",
                  "location": "query",
                  "type": "string"
                }
              },
              "description": "Returns Series membership data given the series id."
            }
          }
        }
      },
      "methods": {
        "get": {
          "description": "Returns Series metadata for the given series ids.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.series.get",
          "flatPath": "books/v1/series/get",
          "response": {
            "$ref": "Series"
          },
          "httpMethod": "GET",
          "path": "books/v1/series/get",
          "parameters": {
            "series_id": {
              "description": "String that identifies the series",
              "repeated": true,
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": []
        }
      }
    },
    "mylibrary": {
      "resources": {
        "bookshelves": {
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "id": "books.mylibrary.bookshelves.volumes.list",
                  "response": {
                    "$ref": "Volumes"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "parameterOrder": [
                    "shelf"
                  ],
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "parameters": {
                    "shelf": {
                      "description": "The bookshelf ID or name retrieve volumes for.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "showPreorders": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Set to true to show pre-ordered books. Defaults to false."
                    },
                    "startIndex": {
                      "type": "integer",
                      "description": "Index of the first element to return (starts at 0)",
                      "format": "uint32",
                      "location": "query"
                    },
                    "q": {
                      "type": "string",
                      "location": "query",
                      "description": "Full-text search query string in this bookshelf."
                    },
                    "source": {
                      "location": "query",
                      "type": "string",
                      "description": "String to identify the originator of this request."
                    },
                    "maxResults": {
                      "format": "uint32",
                      "location": "query",
                      "description": "Maximum number of results to return",
                      "type": "integer"
                    },
                    "projection": {
                      "location": "query",
                      "description": "Restrict information returned to a set of selected fields.",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "type": "string"
                    },
                    "country": {
                      "description": "ISO-3166-1 code to override the IP-based location.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "GET"
                }
              }
            }
          },
          "methods": {
            "moveVolume": {
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.bookshelves.moveVolume",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "parameterOrder": [
                "shelf"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "description": "Moves a volume within a bookshelf.",
              "parameters": {
                "volumePosition": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "Position on shelf to move the item (0 puts the item before the current\nfirst item, 1 puts it between the first and the second and so on.)"
                },
                "volumeId": {
                  "location": "query",
                  "description": "ID of volume to move.",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "shelf": {
                  "type": "string",
                  "description": "ID of bookshelf with the volume.",
                  "required": true,
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "get": {
              "id": "books.mylibrary.bookshelves.get",
              "parameters": {
                "shelf": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "ID of bookshelf to retrieve."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Bookshelf"
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated\nuser.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "httpMethod": "GET",
              "parameterOrder": [
                "shelf"
              ]
            },
            "removeVolume": {
              "parameters": {
                "volumeId": {
                  "description": "ID of volume to remove.",
                  "location": "query",
                  "type": "string"
                },
                "reason": {
                  "description": "The reason for which the book is removed from the library.",
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ]
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "shelf": {
                  "required": true,
                  "location": "path",
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string"
                }
              },
              "description": "Removes a volume from a bookshelf.",
              "httpMethod": "POST",
              "id": "books.mylibrary.bookshelves.removeVolume",
              "response": {
                "$ref": "Empty"
              },
              "parameterOrder": [
                "shelf"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            },
            "clearVolumes": {
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "httpMethod": "POST",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "shelf": {
                  "description": "ID of bookshelf from which to remove a volume.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "shelf"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "id": "books.mylibrary.bookshelves.clearVolumes",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Clears all volumes from a bookshelf."
            },
            "addVolume": {
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "parameterOrder": [
                "shelf"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Empty"
              },
              "description": "Adds a volume to a bookshelf.",
              "id": "books.mylibrary.bookshelves.addVolume",
              "parameters": {
                "volumeId": {
                  "type": "string",
                  "location": "query",
                  "description": "ID of volume to add."
                },
                "reason": {
                  "location": "query",
                  "description": "The reason for which the book is added to the library.",
                  "type": "string",
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ]
                },
                "shelf": {
                  "description": "ID of bookshelf to which to add a volume.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              }
            },
            "list": {
              "response": {
                "$ref": "Bookshelves"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "flatPath": "books/v1/mylibrary/bookshelves",
              "id": "books.mylibrary.bookshelves.list",
              "httpMethod": "GET",
              "path": "books/v1/mylibrary/bookshelves",
              "parameterOrder": []
            }
          }
        },
        "readingpositions": {
          "methods": {
            "setPosition": {
              "id": "books.mylibrary.readingpositions.setPosition",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "parameters": {
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "Volume content version for which this reading position applies."
                },
                "timestamp": {
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "type": "string",
                  "location": "query"
                },
                "position": {
                  "location": "query",
                  "description": "Position string for the new volume reading position.",
                  "type": "string"
                },
                "action": {
                  "location": "query",
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ],
                  "description": "Action that caused this reading position to be set.",
                  "type": "string"
                },
                "deviceCookie": {
                  "location": "query",
                  "type": "string",
                  "description": "Random persistent device cookie optional on set position."
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "ID of volume for which to update the reading position."
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "description": "Sets my reading position information for a volume.",
              "parameterOrder": [
                "volumeId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "httpMethod": "POST"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "volumeId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "ID of volume for which to retrieve a reading position."
                },
                "contentVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "Volume content version for which this reading position is requested."
                }
              },
              "httpMethod": "GET",
              "id": "books.mylibrary.readingpositions.get",
              "parameterOrder": [
                "volumeId"
              ],
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "response": {
                "$ref": "ReadingPosition"
              },
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "description": "Retrieves my reading position information for a volume."
            }
          }
        },
        "annotations": {
          "methods": {
            "update": {
              "httpMethod": "PUT",
              "response": {
                "$ref": "Annotation"
              },
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "annotationId": {
                  "required": true,
                  "description": "The ID for the annotation to update.",
                  "location": "path",
                  "type": "string"
                }
              },
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "id": "books.mylibrary.annotations.update",
              "description": "Updates an existing annotation.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [
                "annotationId"
              ],
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "request": {
                "$ref": "Annotation"
              }
            },
            "list": {
              "description": "Retrieves a list of annotations, possibly filtered.",
              "flatPath": "books/v1/mylibrary/annotations",
              "httpMethod": "GET",
              "path": "books/v1/mylibrary/annotations",
              "parameterOrder": [],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "The volume to restrict annotations to."
                },
                "showDeleted": {
                  "location": "query",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the\nrequest to use this. Defaults to false.",
                  "type": "boolean"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "updatedMin": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive).",
                  "type": "string"
                },
                "updatedMax": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive)."
                },
                "layerIds": {
                  "type": "string",
                  "repeated": true,
                  "description": "The layer ID(s) to limit annotation by.",
                  "location": "query"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "The content version for the requested volume.",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "maxResults": {
                  "location": "query",
                  "type": "integer",
                  "format": "uint32",
                  "description": "Maximum number of results to return"
                },
                "layerId": {
                  "type": "string",
                  "description": "The layer ID to limit annotation by.",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "Annotations"
              },
              "id": "books.mylibrary.annotations.list"
            },
            "delete": {
              "parameters": {
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "annotationId": {
                  "description": "The ID for the annotation to delete.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "books.mylibrary.annotations.delete",
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "parameterOrder": [
                "annotationId"
              ],
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Deletes an annotation."
            },
            "insert": {
              "id": "books.mylibrary.annotations.insert",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/annotations",
              "parameterOrder": [],
              "description": "Inserts a new annotation.",
              "parameters": {
                "annotationId": {
                  "description": "The ID for the annotation to insert.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "showOnlySummaryInResponse": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Requests that only the summary of the specified layer be provided in the\nresponse."
                },
                "country": {
                  "type": "string",
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query"
                }
              },
              "request": {
                "$ref": "Annotation"
              },
              "path": "books/v1/mylibrary/annotations",
              "response": {
                "$ref": "Annotation"
              },
              "httpMethod": "POST"
            },
            "summary": {
              "httpMethod": "POST",
              "path": "books/v1/mylibrary/annotations/summary",
              "description": "Gets the summary of specified layers.",
              "parameterOrder": [],
              "id": "books.mylibrary.annotations.summary",
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "layerIds": {
                  "description": "Array of layer IDs to get the summary for.",
                  "type": "string",
                  "location": "query",
                  "repeated": true
                },
                "volumeId": {
                  "location": "query",
                  "description": "Volume id to get the summary for.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "cloudloading": {
      "methods": {
        "deleteBook": {
          "description": "Remove the book and its contents",
          "flatPath": "books/v1/cloudloading/deleteBook",
          "id": "books.cloudloading.deleteBook",
          "parameterOrder": [],
          "path": "books/v1/cloudloading/deleteBook",
          "parameters": {
            "volumeId": {
              "type": "string",
              "location": "query",
              "description": "The id of the book to be removed."
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "POST"
        },
        "addBook": {
          "path": "books/v1/cloudloading/addBook",
          "id": "books.cloudloading.addBook",
          "parameters": {
            "name": {
              "description": "The document name. It can be set only if the drive_document_id is set.",
              "type": "string",
              "location": "query"
            },
            "drive_document_id": {
              "location": "query",
              "type": "string",
              "description": "A drive document id. The upload_client_token must not be set."
            },
            "mime_type": {
              "description": "The document MIME type. It can be set only if the drive_document_id is set.",
              "location": "query",
              "type": "string"
            },
            "upload_client_token": {
              "type": "string",
              "location": "query",
              "description": "Scotty upload token."
            }
          },
          "flatPath": "books/v1/cloudloading/addBook",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [],
          "description": "Add a user-upload volume and triggers processing."
        },
        "updateBook": {
          "description": "Updates a user-upload volume.",
          "id": "books.cloudloading.updateBook",
          "path": "books/v1/cloudloading/updateBook",
          "httpMethod": "POST",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "request": {
            "$ref": "BooksCloudloadingResource"
          },
          "parameters": {},
          "flatPath": "books/v1/cloudloading/updateBook",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "promooffer": {
      "methods": {
        "dismiss": {
          "parameters": {
            "manufacturer": {
              "type": "string",
              "location": "query",
              "description": "device manufacturer"
            },
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            },
            "serial": {
              "description": "device serial",
              "type": "string",
              "location": "query"
            },
            "device": {
              "description": "device device",
              "type": "string",
              "location": "query"
            },
            "offerId": {
              "description": "Offer to dimiss",
              "type": "string",
              "location": "query"
            },
            "androidId": {
              "description": "device android_id",
              "type": "string",
              "location": "query"
            },
            "product": {
              "type": "string",
              "location": "query",
              "description": "device product"
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "description": "Marks the promo offer as dismissed.",
          "httpMethod": "POST",
          "id": "books.promooffer.dismiss",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/promooffer/dismiss",
          "flatPath": "books/v1/promooffer/dismiss"
        },
        "get": {
          "description": "Returns a list of promo offers available to the user",
          "parameters": {
            "product": {
              "location": "query",
              "description": "device product",
              "type": "string"
            },
            "manufacturer": {
              "location": "query",
              "description": "device manufacturer",
              "type": "string"
            },
            "androidId": {
              "description": "device android_id",
              "type": "string",
              "location": "query"
            },
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            },
            "model": {
              "description": "device model",
              "location": "query",
              "type": "string"
            },
            "serial": {
              "description": "device serial",
              "type": "string",
              "location": "query"
            }
          },
          "id": "books.promooffer.get",
          "path": "books/v1/promooffer/get",
          "flatPath": "books/v1/promooffer/get",
          "parameterOrder": [],
          "response": {
            "$ref": "Offers"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET"
        },
        "accept": {
          "path": "books/v1/promooffer/accept",
          "description": "Accepts the promo offer.",
          "parameterOrder": [],
          "httpMethod": "POST",
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/promooffer/accept",
          "parameters": {
            "product": {
              "location": "query",
              "description": "device product",
              "type": "string"
            },
            "volumeId": {
              "location": "query",
              "type": "string",
              "description": "Volume id to exercise the offer"
            },
            "androidId": {
              "location": "query",
              "description": "device android_id",
              "type": "string"
            },
            "device": {
              "location": "query",
              "description": "device device",
              "type": "string"
            },
            "model": {
              "description": "device model",
              "type": "string",
              "location": "query"
            },
            "offerId": {
              "location": "query",
              "type": "string"
            },
            "manufacturer": {
              "description": "device manufacturer",
              "type": "string",
              "location": "query"
            },
            "serial": {
              "type": "string",
              "description": "device serial",
              "location": "query"
            }
          },
          "id": "books.promooffer.accept"
        }
      }
    }
  },
  "protocol": "rest",
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "baseUrl": "https://www.googleapis.com/",
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "basePath": "",
  "title": "Books API",
  "servicePath": "",
  "batchPath": "batch/books/v1",
  "ownerName": "Google",
  "id": "books:v1",
  "revision": "20200617",
  "parameters": {
    "alt": {
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    }
  },
  "rootUrl": "https://www.googleapis.com/",
  "version": "v1",
  "discoveryVersion": "v1",
  "name": "books",
  "schemas": {
    "BooksCloudloadingResource": {
      "type": "object",
      "properties": {
        "volumeId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        },
        "author": {
          "type": "string"
        }
      },
      "id": "BooksCloudloadingResource"
    },
    "Annotation": {
      "type": "object",
      "properties": {
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "created": {
          "description": "Timestamp for the created time of this annotation.",
          "type": "string"
        },
        "currentVersionRanges": {
          "type": "object",
          "description": "Selection ranges for the most recent content version.",
          "properties": {
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "data": {
          "description": "User-created data for this annotation.",
          "type": "string"
        },
        "clientVersionRanges": {
          "properties": {
            "gbImageRange": {
              "description": "Range in GB image format for this annotation sent by client.",
              "$ref": "BooksAnnotationsRange"
            },
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation sent by client."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation sent by client."
            },
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation sent by client."
            },
            "contentVersion": {
              "description": "Content version the client sent in.",
              "type": "string"
            }
          },
          "description": "Selection ranges sent from the client.",
          "type": "object"
        },
        "volumeId": {
          "description": "The volume that this annotation belongs to.",
          "type": "string"
        },
        "beforeSelectedText": {
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen\nthat has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "layerSummary": {
          "type": "object",
          "properties": {
            "remainingCharacterCount": {
              "description": "Remaining allowed characters on this layer, especially for the \"copy\"\nlayer.",
              "type": "integer",
              "format": "int32"
            },
            "allowedCharacterCount": {
              "type": "integer",
              "description": "Maximum allowed characters on this layer, especially for the \"copy\"\nlayer.",
              "format": "int32"
            },
            "limitType": {
              "type": "string",
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\"\nlayer."
            }
          }
        },
        "pageIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Pages that this annotation spans."
        },
        "layerId": {
          "description": "The layer this annotation is for.",
          "type": "string"
        },
        "afterSelectedText": {
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen\nthat has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "id": {
          "description": "Id of this annotation, in the form of a GUID.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this annotation was modified.",
          "type": "string"
        },
        "highlightStyle": {
          "type": "string",
          "description": "The highlight style for this annotation."
        }
      },
      "id": "Annotation"
    },
    "Volumeannotations": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "totalItems": {
          "description": "The total number of volume annotations found.",
          "type": "integer",
          "format": "int32"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results."
        },
        "version": {
          "description": "The version string for all of the volume annotations in this layer (not\njust the ones in this response). Note: the version string\ndoesn't apply to the annotation data, just the information in this response\n(e.g. the location of annotations in the book).",
          "type": "string"
        },
        "items": {
          "description": "A list of volume annotations.",
          "type": "array",
          "items": {
            "$ref": "Volumeannotation"
          }
        }
      },
      "id": "Volumeannotations"
    },
    "BooksVolumesRecommendedRateResponse": {
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      },
      "id": "BooksVolumesRecommendedRateResponse",
      "type": "object"
    },
    "AnnotationsSummary": {
      "type": "object",
      "id": "AnnotationsSummary",
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "limitType": {
                "type": "string"
              },
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "remainingCharacterCount": {
                "type": "integer",
                "format": "int32"
              },
              "updated": {
                "type": "string"
              },
              "layerId": {
                "type": "string"
              }
            }
          }
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "Review": {
      "type": "object",
      "id": "Review",
      "properties": {
        "content": {
          "description": "Review text.",
          "type": "string"
        },
        "kind": {
          "description": "Resource type for a review.",
          "type": "string"
        },
        "date": {
          "type": "string",
          "description": "Date of this review."
        },
        "fullTextUrl": {
          "description": "URL for the full review text, for reviews gathered from the web.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "Volume that this review is for."
        },
        "rating": {
          "type": "string",
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR,\nFIVE or NOT_RATED."
        },
        "author": {
          "properties": {
            "displayName": {
              "description": "Name of this person.",
              "type": "string"
            }
          },
          "description": "Author of this review.",
          "type": "object"
        },
        "source": {
          "type": "object",
          "description": "Information regarding the source of this review, when the review is not\nfrom a Google Books user.",
          "properties": {
            "extraDescription": {
              "description": "Extra text about the source of the review.",
              "type": "string"
            },
            "description": {
              "type": "string",
              "description": "Name of the source."
            },
            "url": {
              "type": "string",
              "description": "URL of the source of the review."
            }
          }
        },
        "title": {
          "type": "string",
          "description": "Title for this review."
        },
        "type": {
          "type": "string",
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or\nGOOGLE_USER."
        }
      }
    },
    "Discoveryclusters": {
      "id": "Discoveryclusters",
      "type": "object",
      "properties": {
        "totalClusters": {
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "description": "Resorce type."
        },
        "clusters": {
          "items": {
            "type": "object",
            "properties": {
              "banner_with_content_container": {
                "properties": {
                  "textColorArgb": {
                    "type": "string"
                  },
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "maskColorArgb": {
                    "type": "string"
                  },
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "volumes": {
                "type": "array",
                "items": {
                  "$ref": "Volume"
                }
              },
              "uid": {
                "type": "string"
              },
              "subTitle": {
                "type": "string"
              },
              "totalVolumes": {
                "format": "int32",
                "type": "integer"
              },
              "title": {
                "type": "string"
              }
            }
          },
          "type": "array"
        }
      }
    },
    "Bookshelf": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Id of this bookshelf, only unique by user."
        },
        "volumesLastUpdated": {
          "type": "string",
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC\ntimestamp with millisecond resolution)."
        },
        "kind": {
          "type": "string",
          "description": "Resource type for bookshelf metadata."
        },
        "title": {
          "type": "string",
          "description": "Title of this bookshelf."
        },
        "access": {
          "type": "string",
          "description": "Whether this bookshelf is PUBLIC or PRIVATE."
        },
        "created": {
          "type": "string",
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond\nresolution)."
        },
        "updated": {
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with\nmillisecond resolution).",
          "type": "string"
        },
        "volumeCount": {
          "description": "Number of volumes in this bookshelf.",
          "type": "integer",
          "format": "int32"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "description": {
          "type": "string",
          "description": "Description of this bookshelf."
        }
      },
      "id": "Bookshelf",
      "type": "object"
    },
    "Volumeseriesinfo": {
      "properties": {
        "bookDisplayNumber": {
          "type": "string",
          "description": "The display number string. This should be used only for display purposes\nand the actual sequence should be inferred from the below orderNumber."
        },
        "volumeSeries": {
          "type": "array",
          "items": {
            "properties": {
              "seriesBookType": {
                "description": "The book type in the context of series. Examples - Single Issue,\nCollection Edition, etc.",
                "type": "string"
              },
              "seriesId": {
                "description": "The series id.",
                "type": "string"
              },
              "issue": {
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "issueDisplayNumber": {
                      "type": "string"
                    },
                    "issueOrderNumber": {
                      "format": "int32",
                      "type": "integer"
                    }
                  }
                }
              },
              "orderNumber": {
                "description": "The book order number in the series.",
                "type": "integer",
                "format": "int32"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "shortSeriesBookTitle": {
          "type": "string",
          "description": "Short book title in the context of the series."
        }
      },
      "type": "object",
      "id": "Volumeseriesinfo"
    },
    "Volumes": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "Volume"
          },
          "description": "A list of volumes.",
          "type": "array"
        },
        "totalItems": {
          "description": "Total number of volumes found. This might be greater than the number of\nvolumes returned in this response if results have been paginated.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Volumes"
    },
    "Notification": {
      "id": "Notification",
      "properties": {
        "doc_id": {
          "type": "string"
        },
        "is_document_mature": {
          "type": "boolean"
        },
        "crmExperimentIds": {
          "type": "array",
          "description": "The list of crm experiment ids.",
          "items": {
            "format": "int64",
            "type": "string"
          }
        },
        "doc_type": {
          "type": "string"
        },
        "timeToExpireMs": {
          "type": "string",
          "format": "int64"
        },
        "reason": {
          "type": "string"
        },
        "notificationGroup": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "show_notification_settings_action": {
          "type": "boolean"
        },
        "body": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "notification_type": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "id": "Empty"
    },
    "BooksAnnotationsRange": {
      "type": "object",
      "id": "BooksAnnotationsRange",
      "properties": {
        "startOffset": {
          "type": "string",
          "description": "The offset from the starting position."
        },
        "endOffset": {
          "description": "The offset from the ending position.",
          "type": "string"
        },
        "startPosition": {
          "type": "string",
          "description": "The starting position for the range."
        },
        "endPosition": {
          "type": "string",
          "description": "The ending position for the range."
        }
      }
    },
    "Dictlayerdata": {
      "type": "object",
      "properties": {
        "dict": {
          "type": "object",
          "properties": {
            "words": {
              "type": "array",
              "items": {
                "properties": {
                  "derivatives": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string"
                            },
                            "attribution": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "senses": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "definitions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "examples": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    },
                                    "source": {
                                      "type": "object",
                                      "properties": {
                                        "attribution": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "definition": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "syllabification": {
                          "type": "string"
                        },
                        "conjugations": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "value": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        },
                        "pronunciation": {
                          "type": "string"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "string"
                              },
                              "source": {
                                "type": "object",
                                "properties": {
                                  "attribution": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "partOfSpeech": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "source": {
                    "type": "object",
                    "properties": {
                      "attribution": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "description": "The words with different meanings but not related words, e.g. \"go\"\n(game) and \"go\" (verb)."
                  },
                  "examples": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "type": "object"
              }
            },
            "source": {
              "type": "object",
              "description": "The source, url and attribution for this dictionary data.",
              "properties": {
                "attribution": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        },
        "kind": {
          "type": "string"
        },
        "common": {
          "properties": {
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for\nthis entity on Google search."
            }
          },
          "type": "object"
        }
      },
      "id": "Dictlayerdata"
    },
    "Bookshelves": {
      "id": "Bookshelves",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "Bookshelf"
          },
          "description": "A list of bookshelves."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "ConcurrentAccessRestriction": {
      "type": "object",
      "id": "ConcurrentAccessRestriction",
      "properties": {
        "deviceAllowed": {
          "description": "Whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "reasonCode": {
          "description": "Error/warning reason code.",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        },
        "source": {
          "description": "Client app identifier for verification. Download access and\nclient-validation only.",
          "type": "string"
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "timeWindowSeconds": {
          "description": "Time in seconds for license auto-expiration.",
          "type": "integer",
          "format": "int32"
        },
        "maxConcurrentDevices": {
          "type": "integer",
          "description": "The maximum number of concurrent access licenses for this volume.",
          "format": "int32"
        },
        "restricted": {
          "description": "Whether this volume has any concurrent access restrictions.",
          "type": "boolean"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "Volumeannotation": {
      "properties": {
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this is."
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "contentRanges": {
          "properties": {
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation for version above."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation for version above."
            }
          },
          "description": "The content ranges to identify the selected text.",
          "type": "object"
        },
        "volumeId": {
          "type": "string",
          "description": "The Volume this annotation is for."
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "id": {
          "description": "Unique id of this volume annotation.",
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "Data for this annotation."
        },
        "pageIds": {
          "description": "Pages the annotation spans.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updated": {
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC\ndate-time format).",
          "type": "string"
        },
        "layerId": {
          "type": "string",
          "description": "The Layer this annotation is for."
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "annotationDataLink": {
          "description": "Link to get data for this annotation.",
          "type": "string"
        },
        "annotationDataId": {
          "type": "string",
          "description": "The annotation data id for this volume annotation."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        }
      },
      "type": "object",
      "id": "Volumeannotation"
    },
    "GeoAnnotationdata": {
      "type": "object",
      "id": "GeoAnnotationdata",
      "properties": {
        "selfLink": {
          "type": "string",
          "description": "URL for this resource. *"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "data": {
          "description": "JSON encoded data for this geo annotation data.\nEmitted with name 'data' in JSON output. Either this or dict_data will\nbe populated.",
          "$ref": "Geolayerdata"
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this data is for."
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time\nformat).",
          "type": "string"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "encodedData": {
          "type": "string",
          "format": "byte",
          "description": "Base64 encoded data for this annotation data."
        }
      }
    },
    "ReadingPosition": {
      "id": "ReadingPosition",
      "type": "object",
      "properties": {
        "volumeId": {
          "description": "Volume id associated with this reading position.",
          "type": "string"
        },
        "pdfPosition": {
          "description": "Position in a PDF file.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for a reading position."
        },
        "gbImagePosition": {
          "type": "string",
          "description": "Position in a volume for image-based content."
        },
        "gbTextPosition": {
          "description": "Position in a volume for text-based content.",
          "type": "string"
        },
        "epubCfiPosition": {
          "type": "string",
          "description": "Position in an EPUB as a CFI."
        },
        "updated": {
          "description": "Timestamp when this reading position was last updated (formatted UTC\ntimestamp with millisecond resolution).",
          "type": "string"
        }
      }
    },
    "DownloadAccessRestriction": {
      "type": "object",
      "properties": {
        "downloadsAcquired": {
          "format": "int32",
          "type": "integer",
          "description": "If restricted, the number of content download licenses already acquired\n(including the requesting client, if licensed)."
        },
        "reasonCode": {
          "type": "string",
          "description": "Error/warning reason code.  Additional codes may be added in the future. 0\nOK 100   ACCESS_DENIED_PUBLISHER_LIMIT 101   ACCESS_DENIED_LIMIT 200\nWARNING_USED_LAST_ACCESS"
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any download access restrictions."
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "justAcquired": {
          "description": "If deviceAllowed, whether access was just acquired with this request.",
          "type": "boolean"
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "deviceAllowed": {
          "type": "boolean",
          "description": "If restricted, whether access is granted for this (user, device, volume)."
        },
        "maxDownloadDevices": {
          "type": "integer",
          "description": "If restricted, the maximum number of content download licenses for this\nvolume.",
          "format": "int32"
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and\nclient-validation only."
        },
        "signature": {
          "type": "string",
          "description": "Response signature."
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        }
      },
      "id": "DownloadAccessRestriction"
    },
    "FamilyInfo": {
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "membership": {
          "properties": {
            "role": {
              "type": "string",
              "description": "The role of the user in the family."
            },
            "isInFamily": {
              "type": "boolean"
            },
            "allowedMaturityRating": {
              "description": "The maximum allowed maturity rating for the user.",
              "type": "string"
            },
            "acquirePermission": {
              "type": "string",
              "description": "Restrictions on user buying and acquiring content."
            },
            "ageGroup": {
              "description": "The age group of the user.",
              "type": "string"
            }
          },
          "description": "Family membership info of the user that made the request.",
          "type": "object"
        }
      },
      "id": "FamilyInfo",
      "type": "object"
    },
    "Offers": {
      "type": "object",
      "id": "Offers",
      "properties": {
        "items": {
          "description": "A list of offers.",
          "items": {
            "type": "object",
            "properties": {
              "artUrl": {
                "type": "string"
              },
              "gservicesKey": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "items": {
                "items": {
                  "properties": {
                    "coverUrl": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      }
    },
    "Series": {
      "properties": {
        "series": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "imageUrl": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "isComplete": {
                "type": "boolean"
              },
              "subscriptionId": {
                "type": "string"
              },
              "seriesId": {
                "type": "string"
              },
              "seriesType": {
                "type": "string"
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "seriesSubscriptionReleaseInfo": {
                "properties": {
                  "nextReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "releaseTime": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      }
                    }
                  },
                  "cancelTime": {
                    "type": "string"
                  },
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "currentReleaseInfo": {
                    "type": "object",
                    "properties": {
                      "releaseTime": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      }
                    }
                  }
                },
                "type": "object"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "bannerImageUrl": {
                "type": "string"
              }
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Series",
      "type": "object"
    },
    "Metadata": {
      "properties": {
        "items": {
          "description": "A list of offline dictionary metadata.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "download_url": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "size": {
                "format": "int64",
                "type": "string"
              },
              "encrypted_key": {
                "type": "string"
              },
              "version": {
                "format": "int64",
                "type": "string"
              }
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Metadata",
      "type": "object"
    },
    "Annotations": {
      "properties": {
        "items": {
          "items": {
            "$ref": "Annotation"
          },
          "type": "array",
          "description": "A list of annotations."
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results.",
          "type": "string"
        },
        "totalItems": {
          "format": "int32",
          "description": "Total number of annotations found. This may be greater than the number of\nnotes returned in this response if results have been paginated.",
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object",
      "id": "Annotations"
    },
    "DownloadAccesses": {
      "type": "object",
      "id": "DownloadAccesses",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "downloadAccessList": {
          "items": {
            "$ref": "DownloadAccessRestriction"
          },
          "type": "array",
          "description": "A list of download access responses."
        }
      }
    },
    "RequestAccessData": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "downloadAccess": {
          "description": "A download access response.",
          "$ref": "DownloadAccessRestriction"
        },
        "concurrentAccess": {
          "description": "A concurrent access response.",
          "$ref": "ConcurrentAccessRestriction"
        }
      },
      "id": "RequestAccessData"
    },
    "Geolayerdata": {
      "type": "object",
      "id": "Geolayerdata",
      "properties": {
        "geo": {
          "properties": {
            "boundary": {
              "description": "The boundary of the location as a set of loops containing pairs of\nlatitude, longitude coordinates.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "viewport": {
              "description": "The viewport for showing this location. This is a latitude, longitude\nrectangle.",
              "properties": {
                "lo": {
                  "type": "object",
                  "properties": {
                    "longitude": {
                      "format": "double",
                      "type": "number"
                    },
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                },
                "hi": {
                  "properties": {
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "longitude": {
              "format": "double",
              "description": "The longitude of the location.",
              "type": "number"
            },
            "countryCode": {
              "type": "string",
              "description": "The country code of the location."
            },
            "cachePolicy": {
              "type": "string",
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED,\nNEVER"
            },
            "zoom": {
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom\nlevel, in which the entire world can be seen on one map) to 21+ (down to\nindividual buildings). See: https:\n//developers.google.com/maps/documentation/staticmaps/#Zoomlevels",
              "type": "integer",
              "format": "int32"
            },
            "mapType": {
              "type": "string",
              "description": "The type of map that should be used for this location. EX: HYBRID,\nROADMAP, SATELLITE, TERRAIN"
            },
            "latitude": {
              "format": "double",
              "type": "number",
              "description": "The latitude of the location."
            }
          },
          "type": "object"
        },
        "common": {
          "properties": {
            "title": {
              "description": "The display title and localized canonical name to use when searching for\nthis entity on Google search.",
              "type": "string"
            },
            "snippetUrl": {
              "description": "The URL for information for this location. Ex: wikipedia link.",
              "type": "string"
            },
            "snippet": {
              "description": "The description for this location.",
              "type": "string"
            },
            "previewImageUrl": {
              "type": "string",
              "description": "The URL for the preview image information."
            },
            "lang": {
              "description": "The language of the information url and description.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string"
        }
      }
    },
    "Category": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "categoryId": {
                "type": "string"
              },
              "badgeUrl": {
                "type": "string"
              }
            }
          },
          "description": "A list of onboarding categories."
        }
      },
      "type": "object",
      "id": "Category"
    },
    "Seriesmembership": {
      "properties": {
        "member": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          }
        },
        "nextPageToken": {
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resorce type."
        }
      },
      "type": "object",
      "id": "Seriesmembership"
    },
    "DictionaryAnnotationdata": {
      "id": "DictionaryAnnotationdata",
      "properties": {
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time\nformat).",
          "type": "string"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "data": {
          "$ref": "Dictlayerdata",
          "description": "JSON encoded data for this dictionary annotation data.\nEmitted with name 'data' in JSON output. Either this or geo_data will\nbe populated."
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "encodedData": {
          "format": "byte",
          "type": "string",
          "description": "Base64 encoded data for this annotation data."
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Volume": {
      "type": "object",
      "properties": {
        "layerInfo": {
          "properties": {
            "layers": {
              "description": "A layer should appear here if and only if the layer exists for this book.",
              "type": "array",
              "items": {
                "properties": {
                  "volumeAnnotationsVersion": {
                    "description": "The current version of this layer's volume annotations. Note that this\nversion applies only to the data in the\nbooks.layers.volumeAnnotations.* responses. The actual annotation data\nis versioned separately.",
                    "type": "string"
                  },
                  "layerId": {
                    "type": "string",
                    "description": "The layer id of this layer (e.g. \"geo\")."
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "What layers exist in this volume and high level information about them.",
          "type": "object"
        },
        "userInfo": {
          "type": "object",
          "properties": {
            "isUploaded": {
              "type": "boolean",
              "description": "Whether or not this volume was user uploaded."
            },
            "review": {
              "description": "This user's review of this volume, if one exists.",
              "$ref": "Review"
            },
            "isFamilySharingAllowed": {
              "type": "boolean",
              "description": "Deprecated: Replaced by familySharing."
            },
            "isFamilySharedToUser": {
              "description": "Whether or not the user received this volume through family sharing.",
              "type": "boolean"
            },
            "copy": {
              "properties": {
                "allowedCharacterCount": {
                  "type": "integer",
                  "format": "int32"
                },
                "limitType": {
                  "type": "string"
                },
                "updated": {
                  "type": "string"
                },
                "remainingCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                }
              },
              "description": "Copy/Paste accounting information.",
              "type": "object"
            },
            "rentalPeriod": {
              "description": "Period during this book is/was a valid rental.",
              "properties": {
                "startUtcSec": {
                  "type": "string",
                  "format": "int64"
                },
                "endUtcSec": {
                  "format": "int64",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "isPurchased": {
              "description": "Whether or not this volume was purchased by the authenticated user making\nthe request. (In LITE projection.)",
              "type": "boolean"
            },
            "updated": {
              "description": "Timestamp when this volume was last modified by a user action, such as a\nreading position update, volume purchase or writing a review. (RFC 3339\nUTC date-time format).",
              "type": "string"
            },
            "isFamilySharingDisabledByFop": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "entitlementType": {
              "format": "int32",
              "description": "Whether this volume is purchased, sample, pd download etc.",
              "type": "integer"
            },
            "userUploadedVolumeInfo": {
              "type": "object",
              "properties": {
                "processingState": {
                  "type": "string"
                }
              }
            },
            "familySharing": {
              "description": "Information on the ability to share with the family.",
              "type": "object",
              "properties": {
                "isSharingDisabledByFop": {
                  "description": "Whether or not sharing this volume is temporarily disabled due to\nissues with the Family Wallet.",
                  "type": "boolean"
                },
                "isSharingAllowed": {
                  "type": "boolean",
                  "description": "Whether or not this volume can be shared with the family by the user.\nThis includes sharing eligibility of both the volume and the user. If\nthe value is true, the user can initiate a family sharing action."
                },
                "familyRole": {
                  "description": "The role of the user in the family.",
                  "type": "string"
                }
              }
            },
            "acquiredTime": {
              "type": "string",
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC\ndate-time format) Acquiring includes purchase, user upload, receiving\nfamily sharing, etc."
            },
            "readingPosition": {
              "description": "The user's current reading position in the volume, if one is available.\n(In LITE projection.)",
              "$ref": "ReadingPosition"
            },
            "rentalState": {
              "type": "string",
              "description": "Whether this book is an active or an expired rental."
            },
            "isFamilySharedFromUser": {
              "type": "boolean",
              "description": "Whether or not the user shared this volume with the family."
            },
            "isPreordered": {
              "description": "Whether or not this volume was pre-ordered by the authenticated user\nmaking the request. (In LITE projection.)",
              "type": "boolean"
            },
            "acquisitionType": {
              "description": "How this volume was acquired.",
              "format": "int32",
              "type": "integer"
            },
            "isInMyBooks": {
              "type": "boolean",
              "description": "Whether or not this volume is currently in \"my books.\""
            }
          },
          "description": "User specific information related to this volume. (e.g. page this user last\nread or whether they purchased this book)"
        },
        "etag": {
          "type": "string",
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE\nprojection)"
        },
        "volumeInfo": {
          "description": "General volume information.",
          "type": "object",
          "properties": {
            "contentVersion": {
              "type": "string",
              "description": "An identifier for the version of the volume content (text & images). (In\nLITE projection)"
            },
            "previewLink": {
              "type": "string",
              "description": "URL to preview this volume on the Google Books site."
            },
            "publisher": {
              "type": "string",
              "description": "Publisher of this volume. (In LITE projection.)"
            },
            "allowAnonLogging": {
              "description": "Whether anonymous logging should be allowed.",
              "type": "boolean"
            },
            "averageRating": {
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
              "type": "number",
              "format": "double"
            },
            "ratingsCount": {
              "format": "int32",
              "type": "integer",
              "description": "The number of review ratings for this volume."
            },
            "authors": {
              "items": {
                "type": "string"
              },
              "description": "The names of the authors and/or editors for this volume. (In LITE\nprojection)",
              "type": "array"
            },
            "samplePageCount": {
              "format": "int32",
              "description": "Total number of sample pages as per publisher metadata.",
              "type": "integer"
            },
            "imageLinks": {
              "description": "A list of image links for all the sizes that are available. (In LITE\nprojection.)",
              "properties": {
                "large": {
                  "type": "string",
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)"
                },
                "thumbnail": {
                  "type": "string",
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE\nprojection)"
                },
                "smallThumbnail": {
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE\nprojection)",
                  "type": "string"
                },
                "small": {
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)",
                  "type": "string"
                },
                "extraLarge": {
                  "type": "string",
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE\nprojection)"
                },
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "readingModes": {
              "description": "The reading modes available for this volume.",
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "mainCategory": {
              "type": "string",
              "description": "The main category to which this volume belongs. It will be the category\nfrom the categories list returned below that has the highest weight."
            },
            "language": {
              "type": "string",
              "description": "Best language for this volume (based on content). It is the two-letter\nISO 639-1 code such as 'fr', 'en', etc."
            },
            "categories": {
              "type": "array",
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "items": {
                "type": "string"
              }
            },
            "publishedDate": {
              "description": "Date of publication. (In LITE projection.)",
              "type": "string"
            },
            "panelizationSummary": {
              "description": "A top-level summary of the panelization info in this volume.",
              "properties": {
                "containsEpubBubbles": {
                  "type": "boolean"
                },
                "epubBubbleVersion": {
                  "type": "string"
                },
                "containsImageBubbles": {
                  "type": "boolean"
                },
                "imageBubbleVersion": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "pageCount": {
              "type": "integer",
              "description": "Total number of pages as per publisher metadata.",
              "format": "int32"
            },
            "printType": {
              "type": "string",
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE."
            },
            "printedPageCount": {
              "type": "integer",
              "format": "int32",
              "description": "Total number of printed pages in generated pdf representation."
            },
            "infoLink": {
              "type": "string",
              "description": "URL to view information about this volume on the Google Books site. (In\nLITE projection)"
            },
            "subtitle": {
              "description": "Volume subtitle. (In LITE projection.)",
              "type": "string"
            },
            "description": {
              "type": "string",
              "description": "A synopsis of the volume. The text of the description is formatted in\nHTML and includes simple formatting elements, such as b, i, and br tags.\n(In LITE projection.)"
            },
            "comicsContent": {
              "type": "boolean",
              "description": "Whether the volume has comics content."
            },
            "maturityRating": {
              "type": "string"
            },
            "industryIdentifiers": {
              "type": "array",
              "description": "Industry standard identifiers for this volume.",
              "items": {
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER."
                  },
                  "identifier": {
                    "description": "Industry specific volume identifier.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "title": {
              "type": "string",
              "description": "Volume title. (In LITE projection.)"
            },
            "canonicalVolumeLink": {
              "type": "string",
              "description": "Canonical URL for a volume. (In LITE projection.)"
            },
            "dimensions": {
              "properties": {
                "height": {
                  "type": "string",
                  "description": "Height or length of this volume (in cm)."
                },
                "width": {
                  "description": "Width of this volume (in cm).",
                  "type": "string"
                },
                "thickness": {
                  "type": "string",
                  "description": "Thickness of this volume (in cm)."
                }
              },
              "type": "object",
              "description": "Physical dimensions of this volume."
            }
          }
        },
        "saleInfo": {
          "description": "Any information about a volume related to the eBookstore and/or\npurchaseability. This information can depend on the country where the\nrequest originates from (i.e. books may not be for sale in certain\ncountries).",
          "type": "object",
          "properties": {
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this sale information is\nvalid. (In LITE projection.)"
            },
            "buyLink": {
              "description": "URL to purchase this volume on the Google Books site. (In LITE\nprojection)",
              "type": "string"
            },
            "saleability": {
              "description": "Whether or not this book is available for sale or offered for free in the\nGoogle eBookstore for the country listed above. Possible values are\nFOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or\nFOR_PREORDER.",
              "type": "string"
            },
            "onSaleDate": {
              "type": "string",
              "description": "The date on which this book is available for sale."
            },
            "isEbook": {
              "type": "boolean",
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks\nshelf)."
            },
            "retailPrice": {
              "type": "object",
              "properties": {
                "amount": {
                  "type": "number",
                  "format": "double",
                  "description": "Amount in the currency listed below. (In LITE projection.)"
                },
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                }
              },
              "description": "The actual selling price of the book. This is the same as the suggested\nretail or list price unless there are offers or discounts on this volume.\n(In LITE projection.)"
            },
            "offers": {
              "items": {
                "type": "object",
                "properties": {
                  "finskyOfferType": {
                    "format": "int32",
                    "type": "integer",
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)"
                  },
                  "retailPrice": {
                    "description": "Offer retail (=discounted) price in Micros",
                    "type": "object",
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "giftable": {
                    "type": "boolean",
                    "description": "Indicates whether the offer is giftable."
                  },
                  "rentalDuration": {
                    "properties": {
                      "count": {
                        "format": "double",
                        "type": "number"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "description": "The rental duration (for rental offers only).",
                    "type": "object"
                  },
                  "listPrice": {
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "description": "Offers available for this volume (sales and rentals).",
              "type": "array"
            },
            "listPrice": {
              "properties": {
                "amount": {
                  "type": "number",
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "format": "double"
                },
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                }
              },
              "type": "object",
              "description": "Suggested retail price. (In LITE projection.)"
            }
          }
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource. (In LITE projection.)"
        },
        "accessInfo": {
          "type": "object",
          "description": "Any information about a volume related to reading or obtaining that volume\ntext. This information can depend on country (books may be public domain in\none country but not in another, e.g.).",
          "properties": {
            "accessViewStatus": {
              "type": "string",
              "description": "Combines the access and viewability of this volume into a single status\nfield for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN,\nSAMPLE or NONE. (In LITE projection.)"
            },
            "downloadAccess": {
              "description": "Information about a volume's download license access restrictions.",
              "$ref": "DownloadAccessRestriction"
            },
            "embeddable": {
              "type": "boolean",
              "description": "Whether this volume can be embedded in a viewport using the Embedded\nViewer API."
            },
            "epub": {
              "description": "Information about epub content. (In LITE projection.)",
              "properties": {
                "isAvailable": {
                  "description": "Is a flowing text epub available either as public domain or for\npurchase. (In LITE projection.)",
                  "type": "boolean"
                },
                "downloadLink": {
                  "description": "URL to download epub. (In LITE projection.)",
                  "type": "string"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)"
                }
              },
              "type": "object"
            },
            "viewOrderUrl": {
              "type": "string",
              "description": "For ordered but not yet processed orders, we give a URL that can be used\nto go to the appropriate Google Wallet page."
            },
            "publicDomain": {
              "description": "Whether or not this book is public domain in the country listed above.",
              "type": "boolean"
            },
            "webReaderLink": {
              "type": "string",
              "description": "URL to read this volume on the Google Books site. Link will not allow\nusers to read non-viewable volumes."
            },
            "pdf": {
              "description": "Information about pdf content. (In LITE projection.)",
              "type": "object",
              "properties": {
                "isAvailable": {
                  "type": "boolean",
                  "description": "Is a scanned image pdf available either as public domain or for\npurchase. (In LITE projection.)"
                },
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)",
                  "type": "string"
                },
                "downloadLink": {
                  "description": "URL to download pdf. (In LITE projection.)",
                  "type": "string"
                }
              }
            },
            "textToSpeechPermission": {
              "description": "Whether text-to-speech is permitted for this volume. Values can be\nALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.",
              "type": "string"
            },
            "quoteSharingAllowed": {
              "type": "boolean",
              "description": "Whether quote sharing is allowed for this volume."
            },
            "viewability": {
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES,\nNO_PAGES or UNKNOWN. This value depends on the country listed above. A\nvalue of PARTIAL means that the publisher has allowed some portion of the\nvolume to be viewed publicly, without purchase. This can apply to eBooks\nas well as non-eBooks. Public domain books will always have a value of\nALL_PAGES.",
              "type": "string"
            },
            "country": {
              "type": "string",
              "description": "The two-letter ISO_3166-1 country code for which this access information\nis valid. (In LITE projection.)"
            },
            "driveImportedContentLink": {
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by\nselecting the file from Google Drive.",
              "type": "string"
            },
            "explicitOfflineLicenseManagement": {
              "type": "boolean",
              "description": "Whether this volume requires that the client explicitly request offline\ndownload license rather than have it done automatically when loading the\ncontent, if the client supports it."
            }
          }
        },
        "searchInfo": {
          "description": "Search result information related to this volume.",
          "properties": {
            "textSnippet": {
              "type": "string",
              "description": "A text snippet containing the search query."
            }
          },
          "type": "object"
        },
        "kind": {
          "description": "Resource type for a volume. (In LITE projection.)",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for a volume. (In LITE projection.)",
          "type": "string"
        },
        "recommendedInfo": {
          "properties": {
            "explanation": {
              "description": "A text explaining why this volume is recommended.",
              "type": "string"
            }
          },
          "description": "Recommendation related information for this volume.",
          "type": "object"
        }
      },
      "id": "Volume"
    },
    "Layersummaries": {
      "id": "Layersummaries",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of layer summary items.",
          "items": {
            "$ref": "Layersummary"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "totalItems": {
          "description": "The total number of layer summaries found.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Volume2": {
      "properties": {
        "items": {
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "Volume2"
    },
    "Annotationsdata": {
      "type": "object",
      "id": "Annotationsdata",
      "properties": {
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results.",
          "type": "string"
        },
        "totalItems": {
          "type": "integer",
          "description": "The total number of volume annotations found.",
          "format": "int32"
        },
        "items": {
          "items": {
            "$ref": "GeoAnnotationdata"
          },
          "description": "A list of Annotation Data.",
          "type": "array"
        }
      }
    },
    "Layersummary": {
      "properties": {
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "dataCount": {
          "type": "integer",
          "description": "The number of data items for this layer.",
          "format": "int32"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id this resource is for."
        },
        "annotationsDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "id": {
          "description": "Unique id of this layer summary.",
          "type": "string"
        },
        "annotationCount": {
          "type": "integer",
          "description": "The number of annotations for this layer.",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        },
        "contentVersion": {
          "type": "string",
          "description": "The content version this resource is for."
        },
        "annotationsLink": {
          "description": "The link to get the annotations for this layer.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339\nUTC date-time format)."
        },
        "annotationTypes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of annotation types contained for this layer."
        },
        "volumeAnnotationsVersion": {
          "type": "string",
          "description": "The current version of this layer's volume annotations. Note that this\nversion applies only to the data in the books.layers.volumeAnnotations.*\nresponses. The actual annotation data is versioned separately."
        },
        "layerId": {
          "description": "The layer id for this summary.",
          "type": "string"
        }
      },
      "id": "Layersummary",
      "type": "object"
    },
    "Usersettings": {
      "properties": {
        "notification": {
          "type": "object",
          "properties": {
            "rewardExpirations": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "moreFromSeries": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "matchMyInterests": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "moreFromAuthors": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "priceDrop": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "notesExport": {
          "type": "object",
          "properties": {
            "isEnabled": {
              "type": "boolean"
            },
            "folderName": {
              "type": "string"
            }
          },
          "description": "User settings in sub-objects, each for different purposes."
        }
      },
      "type": "object",
      "id": "Usersettings"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  }
}
